(this.webpackJsonpclient=this.webpackJsonpclient||[]).push([[0],{35:function(e,a,t){e.exports=t(50)},40:function(e,a,t){},50:function(e,a,t){"use strict";t.r(a);var n=t(1),r=t.n(n),i=t(28),l=t.n(i),c=(t(40),t(12)),m=t(13),s=t(15),o=t(14),u=(t(41),t(16)),d=t(5),p=t(29),b=t(51),h=t(30),f=t(17),v=t.n(f),E=t(18);function O(){var e=Object(E.a)(["\n  mutation(\n    $name: String!\n    $dietType: String!\n    $numberOfAnimals: Int!\n    $arcID: ID!\n  ) {\n    addAnimal(\n      name: $name\n      dietType: $dietType\n      numberOfAnimals: $numberOfAnimals\n      arcID: $arcID\n    ) {\n      id\n      name\n      dietType\n      numberOfAnimals\n      arcID\n    }\n  }\n"]);return O=function(){return e},e}function y(){var e=Object(E.a)(["\n  {\n    arcs {\n      id\n      arcName\n      captainName\n      arcType\n    }\n  }\n"]);return y=function(){return e},e}function N(){var e=Object(E.a)(["\n  query($id: ID) {\n    arc(id: $id) {\n      arcName\n      captainName\n      arcType\n      animals {\n        name\n        dietType\n        numberOfAnimals\n      }\n    }\n  }\n"]);return N=function(){return e},e}function A(){var e=Object(E.a)(["\n  {\n    animals {\n      id\n      name\n      dietType\n      numberOfAnimals\n    }\n  }\n"]);return A=function(){return e},e}function g(){var e=Object(E.a)(["\n  query($id: ID) {\n    animal(id: $id) {\n      id\n      name\n      dietType\n      numberOfAnimals\n      arc {\n        arcName\n        captainName\n        arcType\n        id\n        animals {\n          name\n          id\n        }\n      }\n    }\n  }\n"]);return g=function(){return e},e}var j=Object(u.b)(g()),k=Object(u.b)(A()),T=(Object(u.b)(N()),Object(u.b)(y())),D=Object(u.b)(O()),C=function(e){Object(s.a)(t,e);var a=Object(o.a)(t);function t(e){var n;return Object(c.a)(this,t),(n=a.call(this,e)).onChange=function(e){return n.setState(Object(p.a)({},e.target.name,e.target.value))},n.handleOptionChange=function(e){n.setState({dietTypeOption:e.target.value})},n.state={name:"",dietTypeOption:"",arcID:"",numberOfAnimals:"",errors:{}},n}return Object(m.a)(t,[{key:"displayArcs",value:function(){var e=this.props.getArcsQuery;return e.loading?r.a.createElement("option",{disabled:!0},"Loading..."):e.arcs.map((function(e){return r.a.createElement("option",{key:e.id,value:e.id},e.arcName)}))}},{key:"displayEatingHabits",value:function(){var e=this.state.dietTypeOption;return r.a.createElement("div",null,r.a.createElement("div",{className:"form-group"},this.state.errors.dietTypeOption?r.a.createElement("div",{className:"invalid-feedback d-block"},r.a.createElement("label",{htmlFor:"dietType"},"Diet Type is required.")):r.a.createElement("div",null,r.a.createElement("label",{htmlFor:"dietType"},"Diet Type")),r.a.createElement("div",{className:"form-check"},r.a.createElement("label",null,r.a.createElement("input",{type:"radio",name:"dietTypeOption",value:"Carnivore",checked:"Carnivore"===e,onChange:this.handleOptionChange,className:v()("form-check-input",{"is-invalid":this.state.errors.dietTypeOption})}),"Carnivore")),r.a.createElement("div",{className:"form-check"},r.a.createElement("label",null,r.a.createElement("input",{type:"radio",name:"dietTypeOption",value:"Herbivore",className:v()("form-check-input",{"is-invalid":this.state.errors.dietTypeOption}),checked:"Herbivore"===e,onChange:this.handleOptionChange}),"Herbivore")),r.a.createElement("div",{className:"form-check"},r.a.createElement("label",null,r.a.createElement("input",{type:"radio",name:"dietTypeOption",value:"Both",className:v()("form-check-input",{"is-invalid":this.state.errors.dietTypeOption}),checked:"Both"===e,onChange:this.handleOptionChange}),"Both Carnivore and Herbivore"))))}},{key:"onSubmit",value:function(e){e.preventDefault();var a=this.state,t=a.name,n=a.arcID,r=a.numberOfAnimals,i=a.dietTypeOption;""!==t?""!==r?/^[0-9\b]+$/.test(r)?""!==i?""!==n?(this.props.addAnimalMutation({variables:{name:t,dietType:i,numberOfAnimals:parseInt(r),arcID:n},refetchQueries:[{query:k}]}),this.setState({name:"",dietTypeOption:"",numberOfAnimals:"",arcID:"",errors:{}})):this.setState({errors:{arcID:"Arc is required"}}):this.setState({errors:{dietTypeOption:"Diet Type is required"}}):this.setState({errors:{numberOfAnimals:"Not a valid number."}}):this.setState({errors:{numberOfAnimals:"Number of Animals is required"}}):this.setState({errors:{name:"Name is required"}})}},{key:"render",value:function(){var e=this,a=this.state,t=a.name,n=a.arcID,i=a.numberOfAnimals,l=a.errors;return r.a.createElement("div",{className:"card col-md-6"},r.a.createElement("div",{className:"card-header bg-success text-white"},"Add Animal"),r.a.createElement("div",{className:"card-body "},r.a.createElement("form",{onSubmit:this.onSubmit.bind(this)},r.a.createElement("div",{className:"form-group"},r.a.createElement("label",{htmlFor:"animalName"},"Animal Name"),r.a.createElement("input",{type:"text",name:"name",className:v()("form-control form-control-lg",{"is-invalid":l.name}),placeholder:"Please Enter Animal Name",value:t,onChange:this.onChange}),l.name&&r.a.createElement("div",{className:"invalid-feedback"},"Animal Name is required."),r.a.createElement("div",{className:"form-group"},r.a.createElement("label",{htmlFor:"numberOfAnimals"},"Number of Animals"),r.a.createElement("input",{type:"text",name:"numberOfAnimals",className:v()("form-control form-control-lg",{"is-invalid":l.numberOfAnimals}),placeholder:"Please Enter Number of Animals",value:i,onChange:this.onChange}),l.numberOfAnimals&&r.a.createElement("div",{className:"invalid-feedback"},"Not a valid number")),this.displayEatingHabits(),r.a.createElement("div",{className:"form-group"},r.a.createElement("label",{htmlFor:"author"},"Arc"),r.a.createElement("select",{className:v()("form-control form-control-lg",{"is-invalid":l.arcID}),defaultValue:n,onChange:function(a){e.setState({arcID:a.target.value})}},r.a.createElement("option",null,"Select arc"),this.displayArcs()),l.arcID&&r.a.createElement("div",{className:"invalid-feedback"},"Arc is required.")),r.a.createElement("div",{className:"form-group"},r.a.createElement("input",{type:"submit",value:"Add Animal",className:"btn btn-light btn-block"}))))))}}]),t}(n.Component),I=Object(h.flowRight)(Object(b.a)(T,{name:"getArcsQuery"}),Object(b.a)(D,{name:"addAnimalMutation"}))(C),S=function(e){Object(s.a)(t,e);var a=Object(o.a)(t);function t(){return Object(c.a)(this,t),a.apply(this,arguments)}return Object(m.a)(t,[{key:"displayAnimalDetails",value:function(){var e=this.props.data.animal;return e?r.a.createElement("div",{className:"card border-success mb-3"},r.a.createElement("div",{className:"card-header text-success"},r.a.createElement("h4",null,e.name)),r.a.createElement("div",{className:"card-body text-success"},r.a.createElement("p",{className:"card-text"},r.a.createElement("b",null,"Diet type: "),e.dietType),r.a.createElement("p",{className:"card-text"},r.a.createElement("b",null,"Number of animals: "),e.numberOfAnimals),r.a.createElement("p",{className:"card-text"},r.a.createElement("b",null,"Arc: "),e.arc.arcName),r.a.createElement("p",{className:"card-text"},r.a.createElement("b",null,"Captain: "),e.arc.captainName),r.a.createElement("p",{className:"card-text"},"Other animals on this arc:"),r.a.createElement("ul",{className:"other-animals"},e.arc.animals.map((function(e){return r.a.createElement("li",{key:e.id},e.name)}))))):r.a.createElement("div",null,"No Animal Selected")}},{key:"render",value:function(){return r.a.createElement("div",{id:"animal-details"},this.displayAnimalDetails())}}]),t}(n.Component),$=Object(b.a)(j,{options:function(e){return{variables:{id:e.animalID}}}})(S),q=function(e){Object(s.a)(t,e);var a=Object(o.a)(t);function t(e){var n;return Object(c.a)(this,t),(n=a.call(this,e)).state={selected:null},n}return Object(m.a)(t,[{key:"displayAnimals",value:function(){var e=this,a=this.props.data;return a.loading?r.a.createElement("div",null,"Loading animals..."):a.animals.map((function(a){return r.a.createElement("li",{key:a.id,onClick:function(t){e.setState({selected:a.id})}},a.name)}))}},{key:"render",value:function(){return r.a.createElement("div",null,r.a.createElement("ul",{id:"animal-list"},this.displayAnimals()),r.a.createElement($,{animalID:this.state.selected}))}}]),t}(n.Component),w=Object(b.a)(k)(q),x=new u.a({uri:"/graphql"}),H=function(e){Object(s.a)(t,e);var a=Object(o.a)(t);function t(){return Object(c.a)(this,t),a.apply(this,arguments)}return Object(m.a)(t,[{key:"render",value:function(){return r.a.createElement(d.b,{client:x},r.a.createElement("div",{id:"main"},r.a.createElement("h2",null,"List of Animals in Arcs"),r.a.createElement(w,null),r.a.createElement(I,null)))}}]),t}(n.Component);Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));l.a.render(r.a.createElement(r.a.StrictMode,null,r.a.createElement(H,null)),document.getElementById("root")),"serviceWorker"in navigator&&navigator.serviceWorker.ready.then((function(e){e.unregister()})).catch((function(e){console.error(e.message)}))}},[[35,1,2]]]);
//# sourceMappingURL=main.30111258.chunk.js.map